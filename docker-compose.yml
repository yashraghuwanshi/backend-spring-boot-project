# Define the services for this application
services:

  # MySQL database service
  mysqldb:
    # Use the official mysql:latest image
    image: mysql:latest
    # Set a custom container name for easier identification
    container_name: mysqldb
    # Expose port 3307 on the host machine to map to port 3306 within the container
    # This allows us to connect to the MySQL database from the host using port 3307.
    ports:
      - 3307:3306
    # Set environment variables for the MySQL container:
    environment:
      MYSQL_ROOT_PASSWORD: root  # Set the root password for MySQL (consider using a stronger password in production)
      MYSQL_DATABASE: productdb  # Name of the database to create
    # Define a volume to persist the MySQL data even if the container restarts
    volumes:
      - mysql-data:/var/lib/mysql  # Mount an empty volume named mysql-data to the /var/lib/mysql directory within the container
    # Connect the mysqldb service to the springboot-mysql-net network (defined later)
    networks:
      - springboot-mysql-net

  # Spring Boot application service
  spring-boot-app:
    # Build the Spring Boot application image from the current directory (.)
    build:
      context: .
      dockerfile: Dockerfile  # Assuming the Dockerfile is named Dockerfile in the current directory
    # Tag the built image with the name spring-boot-app and version v1.0
    image: yashraghuwanshi/spring-boot-app:v1.0
    # Set a custom container name for easier identification
    container_name: spring-boot-app
    # Expose port 9090 on the host machine to map to port 9090 within the container
    # This allows us to access your Spring Boot application on port 9090 of the host machine.
    ports:
      - 9090:9090
    # Set environment variables for the Spring Boot application container:
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/productdb  # Define the JDBC connection URL for the MySQL database
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect  # Specify the Hibernate dialect for MySQL
      SPRING_DATASOURCE_USERNAME: root  # Username to connect to the MySQL database (set in the mysqldb service)
      SPRING_DATASOURCE_PASSWORD: root  # Password to connect to the MySQL database (set in the mysqldb service)
    # Ensure the mysqldb service is up and running before starting this service
    depends_on:
      - mysqldb
    # Connect the spring-boot-app service to the springboot-mysql-net network (defined later)
    networks:
      - springboot-mysql-net
    # Restart the container automatically on failure
    restart: on-failure

# Define a custom network named springboot-mysql-net
networks:
  springboot-mysql-net:
    driver: bridge  # Use the bridge networking driver

# Define a volume named mysql-data (empty by default)
volumes:
  mysql-data:
